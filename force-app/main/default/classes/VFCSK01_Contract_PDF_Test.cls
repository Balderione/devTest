@isTest
public class VFCSK01_Contract_PDF_Test {

    @testSetup
    static void testSetup() {
        
        Account merchantAccount = APER07_UtilityTestMethod.getCompany('VFCSK01_Contract_PDF_Test');
        merchantAccount.BillingStreet='Test';
        merchantAccount.BillingPostalCode='Test';
        merchantAccount.BillingCity='Test';
        merchantAccount.ER_VAT_Number__c = '2426738833';
        insert merchantAccount;
        
        PriceBook2 newPriceBook = APER07_UtilityTestMethod.getpriceBook();
        //update newPriceBook;

        Product2 newSolution = APER07_UtilityTestMethod.getsolution('test');
        insert newSolution;
        
        List <Product2> Services = new List<Product2>();

        Product2 newServiceTRV1 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTRV1.productCode = 'ERSK_TRV_003';
        Services.add(newServiceTRV1);
        
        Product2 newServiceTRV5 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTRV5.productCode = 'ERSK_TRV_005';
        Services.add(newServiceTRV5);
        
        Product2 newServiceTRV10 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTRV10.productCode = 'ERSK_TRV_010';
        Services.add(newServiceTRV10);
        
        Product2 newServiceTRV13 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTRV13.productCode = 'ERSK_TRV_013';
        Services.add(newServiceTRV13);
        
        Product2 newServiceTRV = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTRV.productCode = 'ERSK_TRV';
        Services.add(newServiceTRV);
        
        Product2 newServiceTRVEmpty = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTRVEmpty.productCode = 'ERSK_TRV_';
        Services.add(newServiceTRVEmpty);
        
        Product2 newServiceTR20 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR20.productCode = 'ERSK_TR_020';
        Services.add(newServiceTR20);
        
        Product2 newServiceTR1 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR1.productCode = 'ERSK_TR_001';
        Services.add(newServiceTR1);
        
        Product2 newServiceTR2 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR2.productCode = 'ERSK_TR_002';
        Services.add(newServiceTR2);
        
        Product2 newServiceTR4 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR4.productCode = 'ERSK_TR_004';
        Services.add(newServiceTR4);
        
        Product2 newServiceTR8 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR8.productCode = 'ERSK_TR_008';
        Services.add(newServiceTR8);
        
        Product2 newServiceTR13 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR13.productCode = 'ERSK_TR_013';
        Services.add(newServiceTR13);
        
        Product2 newServiceTR14 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR14.productCode = 'ERSK_TR_014';
        Services.add(newServiceTR14);
        
        Product2 newServiceTR15 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR15.productCode = 'ERSK_TR_015';
        Services.add(newServiceTR15);
        
        Product2 newServiceTR10 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR10.productCode = 'ERSK_TR_010';
        Services.add(newServiceTR10);
        
        Product2 newServiceTR = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTR.productCode = 'ERSK_TR_';
        Services.add(newServiceTR);
        
        Product2 newServiceTC1 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTC1.productCode = 'ERSK_TC_001';
        Services.add(newServiceTC1);
        
        Product2 newServiceTC2 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTC2.productCode = 'ERSK_TC_002';
        Services.add(newServiceTC2);
        
        Product2 newServiceTC8 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTC8.productCode = 'ERSK_TC_008';
        Services.add(newServiceTC8);
        
        Product2 newServiceTC = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTC.productCode = 'ERSK_TC_';
        Services.add(newServiceTC);
        
        Product2 newServiceHC1 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceHC1.productCode = 'ERSK_HC_003';
        Services.add(newServiceHC1);
        
        Product2 newServiceHC5 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceHC5.productCode = 'ERSK_HC_005';
        Services.add(newServiceHC5);
        
        Product2 newServiceHC10 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceHC10.productCode = 'ERSK_HC_010';
        Services.add(newServiceHC10);
        
        Product2 newServiceHC13 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceHC13.productCode = 'ERSK_HC_013';
        Services.add(newServiceHC13);
        
        Product2 newServiceHC = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceHC.productCode = 'ERSK_HC_';
        Services.add(newServiceHC);
        
        Product2 newServiceTM1 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTM1.productCode = 'ERSK_TM_001';
        Services.add(newServiceTM1);
        
        Product2 newServiceTM2 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTM2.productCode = 'ERSK_TM_002';
        Services.add(newServiceTM2);
        
		Product2 newServiceTM3 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTM3.productCode = 'ERSK_TM_003';
        Services.add(newServiceTM3);
        
        Product2 newServiceTM8 = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTM8.productCode = 'ERSK_TM_008';
        Services.add(newServiceTM8);
        
        Product2 newServiceTM = APER07_UtilityTestMethod.getservice('testService',newSolution.id);
        newServiceTM.productCode = 'ERSK_TM_';
		Services.add(newServiceTM);
        
        insert Services;
        
        List<PricebookEntry> PEs = new List<PricebookEntry>();
        
        PriceBookEntry newPriceBookEntryTRVEmpty = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTRVEmpty.id);
        PEs.add(newPriceBookEntryTRVEmpty);
        
        PriceBookEntry newPriceBookEntryTRV = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTRV.id);
        PEs.add(newPriceBookEntryTRV);
        
        PriceBookEntry newPriceBookEntryTRV1 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTRV1.id);
        PEs.add(newPriceBookEntryTRV1);
        
        PriceBookEntry newPriceBookEntryTRV5 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTRV5.id);
        PEs.add(newPriceBookEntryTRV5);
        
        PriceBookEntry newPriceBookEntryTRV10 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTRV10.id);
        PEs.add(newPriceBookEntryTRV10);
        
        PriceBookEntry newPriceBookEntryTRV13 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTRV13.id);
        PEs.add(newPriceBookEntryTRV13);
        
        PriceBookEntry newPriceBookEntryTR = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR.id);
        PEs.add(newPriceBookEntryTR);
        
        PriceBookEntry newPriceBookEntryTR1 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR1.id);
        PEs.add(newPriceBookEntryTR1);
        
        PriceBookEntry newPriceBookEntryTR2 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR2.id);
        PEs.add(newPriceBookEntryTR2);
        
        PriceBookEntry newPriceBookEntryTR4 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR4.id);
        PEs.add(newPriceBookEntryTR4);
        
        PriceBookEntry newPriceBookEntryTR8 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR8.id);
        PEs.add(newPriceBookEntryTR8);
        
        PriceBookEntry newPriceBookEntryTR13 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR13.id);
        PEs.add(newPriceBookEntryTR13);
        
        PriceBookEntry newPriceBookEntryTR14 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR14.id);
        PEs.add(newPriceBookEntryTR14);
        
        PriceBookEntry newPriceBookEntryTR15 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR15.id);
        PEs.add(newPriceBookEntryTR15);
        
        PriceBookEntry newPriceBookEntryTR10 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR10.id);
        PEs.add(newPriceBookEntryTR10);
        
        PriceBookEntry newPriceBookEntryTR20 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTR20.id);
        PEs.add(newPriceBookEntryTR20);
        
        PriceBookEntry newPriceBookEntryTC = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTC.id);
        PEs.add(newPriceBookEntryTC);
        
        PriceBookEntry newPriceBookEntryTC1 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTC1.id);
        PEs.add(newPriceBookEntryTC1);
        
        PriceBookEntry newPriceBookEntryTC2 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTC2.id);
        PEs.add(newPriceBookEntryTC2);
        
        PriceBookEntry newPriceBookEntryTC8 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTC8.id);
        PEs.add(newPriceBookEntryTC8);
        
        PriceBookEntry newPriceBookEntryHC = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceHC.id);
        PEs.add(newPriceBookEntryHC);
        
        PriceBookEntry newPriceBookEntryHC1 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceHC1.id);
        PEs.add(newPriceBookEntryHC1);
        
        PriceBookEntry newPriceBookEntryHC5 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceHC5.id);
        PEs.add(newPriceBookEntryHC5);
        
        PriceBookEntry newPriceBookEntryHC10 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceHC10.id);
        PEs.add(newPriceBookEntryHC10);
        
        PriceBookEntry newPriceBookEntryHC13 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceHC13.id);
        PEs.add(newPriceBookEntryHC13);
        
        PriceBookEntry newPriceBookEntryTM1 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTM1.id);
        PEs.add(newPriceBookEntryTM1);
        
        PriceBookEntry newPriceBookEntryTM2 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTM2.id);
        PEs.add(newPriceBookEntryTM2);
        
        PriceBookEntry newPriceBookEntryTM3 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTM3.id);
        PEs.add(newPriceBookEntryTM3);
        
        PriceBookEntry newPriceBookEntryTM8 = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTM8.id);
        PEs.add(newPriceBookEntryTM8);
        
        PriceBookEntry newPriceBookEntryTM = APER07_UtilityTestMethod.getpriceBookEntry(newPriceBook.id, newServiceTM.id);
        PEs.add(newPriceBookEntryTM);
        
        insert PEs;
        
        Opportunity newOpportunity = APER07_UtilityTestMethod.getOpportunity('ER_Merchant_Opportunity', 'VFCSK01_Contract_PDF_Test');
        newOpportunity.AccountId = merchantAccount.id;
        newOpportunity.ER_BU_Picklist__c = 'SK';
        insert newOpportunity;
        
        Opportunity newOpportunity2 = APER07_UtilityTestMethod.getOpportunity('ER_Merchant_Opportunity', 'VFCSK01_Contract_PDF_Test');
        newOpportunity2.AccountId = merchantAccount.id;
        newOpportunity2.ER_BU_Picklist__c = 'SK';
        newOpportunity2.ER_PaymentTerms__c	= 'At reception of invoice';
        newOpportunity2.ER_Credit_Limit__c = 123;
        insert newOpportunity2;
        
        Quote merchantQuote = APER07_UtilityTestMethod.getQuote('ER_Merchant_Quote', 'VFCSK01_Contract_PDF_Test', newOpportunity.id, newPriceBook.id);
        insert merchantQuote;
        
        Quote merchantQuote2 = APER07_UtilityTestMethod.getQuote('ER_Merchant_Quote', 'VFCSK01_Contract_PDF_Test2', newOpportunity2.id, newPriceBook.id);
        insert merchantQuote2;
        
        List<QuoteLineItem> QLIs = new List<QuoteLineItem>();
        
        QuoteLineItem qliTRVEmpty = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTRVEmpty.id);
        QLIs.add(qliTRVEmpty);
        
        QuoteLineItem qliTRV = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTRV.id);
		QLIs.add(qliTRV);
        
        QuoteLineItem qliTRV1 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTRV1.id);
        QLIs.add(qliTRV1);
        
        QuoteLineItem qliTRV5 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTRV5.id);
        QLIs.add(qliTRV5);
        
        QuoteLineItem qliTRV10 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTRV10.id);
        QLIs.add(qliTRV10);
        
        QuoteLineItem qliTRV13 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTRV13.id);
        QLIs.add(qliTRV13);
        
        QuoteLineItem qliTR = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR.id);
        QLIs.add(qliTR);
        
        QuoteLineItem qliTR1 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR1.id);
        QLIs.add(qliTR1);
        
        QuoteLineItem qliTR2 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR2.id);
        QLIs.add(qliTR2);
        
        QuoteLineItem qliTR4 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR4.id);
        QLIs.add(qliTR4);
        
        QuoteLineItem qliTR8 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR8.id);
        QLIs.add(qliTR8);
        
        QuoteLineItem qliTR13 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR13.id);
        QLIs.add(qliTR13);
        
        QuoteLineItem qliTR14 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR14.id);
        QLIs.add(qliTR14);
        
        QuoteLineItem qliTR15 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR15.id);
        QLIs.add(qliTR15);
        
        QuoteLineItem qliTR10 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR10.id);
        QLIs.add(qliTR10);
        
        QuoteLineItem qliTR20 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTR20.id);
        QLIs.add(qliTR20);
        
        QuoteLineItem qliTC = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTC.id);
        QLIs.add(qliTC);
        
        QuoteLineItem qliTC1 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTC1.id);
        QLIs.add(qliTC1);
        
        QuoteLineItem qliTC2 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTC2.id);
        QLIs.add(qliTC2);
        
        QuoteLineItem qliTC8 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTC8.id);
        QLIs.add(qliTC8);
        
        QuoteLineItem qliHC = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryHC.id);
        QLIs.add(qliHC);
        
        QuoteLineItem qliHC1 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryHC1.id);
        QLIs.add(qliHC1);
        
        QuoteLineItem qliHC5 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryHC5.id);
        QLIs.add(qliHC5);
        
        QuoteLineItem qliHC10 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryHC10.id);
        QLIs.add(qliHC10);
        
        QuoteLineItem qliHC13 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryHC13.id);
        QLIs.add(qliHC13);
        
        QuoteLineItem qliTM = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTM.id);
        QLIs.add(qliTM);
        
        QuoteLineItem qliTM1 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTM1.id);
        QLIs.add(qliTM1);
        
        QuoteLineItem qliTM2 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTM2.id);
        QLIs.add(qliTM2);
        
        QuoteLineItem qliTM3 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTM3.id);
        QLIs.add(qliTM3);
        
        QuoteLineItem qliTM8 = APER07_UtilityTestMethod.getQuoteLineItem(merchantQuote.id, newPriceBookEntryTM8.id);
        QLIs.add(qliTM8);
        
        insert QLIs;
        
        Contact contactTest =  new Contact(
            email = 'a@a.a',
             FirstName = 'Test',
             LastName = 'Test',
             recordtypeId = Schema.SObjectType.Contact.getRecordTypeInfosByDeveloperName().get('ER_Contact_RT').getRecordTypeId()
           );
        contactTest.AccountId = merchantAccount.Id;
        insert contactTest;
        
        merchantQuote.contactid=contactTest.id;
        update merchantQuote;
        
        merchantAccount.HU_HQ_Contact__c = contactTest.id;
        update merchantAccount;
        
        ER_Bank_Account__c BA = new  ER_Bank_Account__c(Name = 'Test', 	ER_IBAN__c = 'AA22AFAA25526222222222',ER_BIC__c='45678328923233');
        
        insert BA;
        
        ER_Financial_Center__c testFinancialCenter = APER07_UtilityTestMethod.getFinancialCenter('VFCSK01_Contract_PDF_Test',merchantAccount.id, Label.LABS_SF_FinancialCenter_Merchant,'Test','Test','Test','Test');
    	testFinancialCenter.ER_Contact__c = contactTest.id;
       	testFinancialCenter.ER_Payment_Site__c = true;
        testFinancialCenter.ER_Bank_Account__c = BA.id;
        insert testFinancialCenter;
    }
    
    static testMethod void testController() {
        
        Quote testQuote = [select id, Name from Quote where name = 'VFCSK01_Contract_PDF_Test' limit 1];
        ApexPages.currentPage().getParameters().put('id',testQuote.Id);
        VFCSK01_Contract_PDF controller = new  VFCSK01_Contract_PDF();
        
        Quote testQuote2 = [select id, Name from Quote where name = 'VFCSK01_Contract_PDF_Test2' limit 1];
        ApexPages.currentPage().getParameters().put('id',testQuote2.Id);
        VFCSK01_Contract_PDF controller2 = new  VFCSK01_Contract_PDF();
        
    }
    
}