<apex:page id="VFER01_Asset_Transactions_BalanceId" standardController="Asset" extensions="VFCER01_Asset_Transactions_Balance" standardStylesheets="false" sidebar="false" showHeader="false">
    
    <apex:includeScript value="/support/console/40.0/integration.js"/>
    <apex:includeScript value="/canvas/sdk/js/publisher.js" />
    <apex:stylesheet value="{!URLFOR($Resource.DataTables, 'DataTables/css/jquery.dataTables.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SLDS272, 'styles/salesforce-lightning-design-system.min.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.DataTables, 'DataTables/js/jquery-3.3.1.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.DataTables, 'DataTables/js/jquery.dataTables.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.DataTables, 'DataTables/js/moment.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.DataTables, 'DataTables/js/datetime-moment.js')}"/>
    
    <apex:includeScript value="{!URLFOR($Resource.Daterangepicker, 'moment.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Daterangepicker, 'daterangepicker.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Daterangepicker, 'daterangepicker.css')}"/>

    <style>
        /*SCROLL BAR*/
        /* width */
        ::-webkit-scrollbar {
            width: 0.4rem;
            height: 0.4rem;
        }
        /* Track */
        ::-webkit-scrollbar-track {
            background: #f1f1f1; 
        }

        /* Handle */
        ::-webkit-scrollbar-thumb {
            background: #b0c4df; 
        }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
            background: #54698d; 
        }
        body {
        background-color: white;
        }
        html body.sfdcBody {
        padding: 0;
        }
        th{
        padding-left: 10px !important;
        }
        .transactionOptions{
            padding-bottom: .5rem;
            padding-top: .5rem;
        }
    </style>    
    <apex:outputPanel id="msgErrorId">
        <apex:outputPanel rendered="{!showError}">
            <div class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_error">
                <apex:pageMessages escape="false"/> 
            </div>
        </apex:outputPanel>
    </apex:outputPanel>
    <apex:form id="formId">
        <apex:outputPanel styleclass="slds-form-element slds-form_compound">
            <div class="slds-form-element__control">
                <div class="slds-form-element__group">
                    <div class="slds-form-element__row">
                        <!--div class="slds-form-element slds-size_1-of-3">
                            <label class="slds-form-element__label">{!$ObjectType.Asset.Fields.ER_Edenred_Solution__c.Label}</label>
                            <div class="slds-form-element__control">
                                <div class="slds-combobox_container">
                                    <div class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click">
                                        <div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right">
                                            <apex:inputField id="solutionId" value="{!Asset.ER_Edenred_Solution__c}" styleclass="slds-input slds-combobox__input slds-combobox__input-value slds-form-element__static" onchange="checkWSbuttons(this);checkActionsButtons('{!Asset.Status}')"/>    
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div-->
                        <div class="slds-form-element slds-size_1-of-1">
                            <div class="slds-button-group" role="group">
                                    <apex:actionStatus id="getBalanceStatus">
                                        <apex:facet name="start">
                                            <apex:outputPanel >
                                                <apex:image value="{!URLFOR($Resource.SLDS272, 'images/spinners/slds_spinner_brand.gif')}" height="25" width="25"/>
                                            </apex:outputPanel>
                                        </apex:facet>
                                        <apex:facet name="stop">
                                            <apex:outputPanel >
                                                <apex:commandButton id="getBalanceButtonId" styleClass="slds-button slds-button_neutral" reRender="msgErrorId,balanceInformationsPanelId" status="getBalanceStatus" action="{!getBalance}" value="{!$Label.LAB_SF_ASSET_GetBalance}"/>  
                                            </apex:outputPanel>
                                        </apex:facet>            
                                    </apex:actionStatus>
                                    <!--apex:actionStatus id="getTransactionsStatus">
                                        <apex:facet name="start">
                                            <apex:image value="{!URLFOR($Resource.SLDS272, 'images/spinners/slds_spinner_brand.gif')}" height="25" width="25"/>
                                        </apex:facet>
                                        <apex:facet name="stop">
                                            <apex:outputPanel >
                                                <apex:commandButton id="getTransactionsButtonId" styleClass="slds-button slds-button_neutral" reRender="repeatId,msgErrorId" status="getTransactionsStatus" action="{!getTransactionList}" value="{!$Label.LAB_SF_ASSET_GetTransactions}" oncomplete="RefreshTable();" />  
                                            </apex:outputPanel>
                                        </apex:facet>            
                                    </apex:actionStatus-->
                                    <apex:actionStatus id="pinResetStatus" >
                                        <apex:facet name="start">
                                            <apex:image value="{!URLFOR($Resource.SLDS272, 'images/spinners/slds_spinner_brand.gif')}" height="25" width="25"/>
                                        </apex:facet>
                                        <apex:facet name="stop">
                                            <apex:outputPanel >
                                                <apex:commandButton id="pinResetButtonId" styleClass="slds-button slds-button_neutral" reRender="pinResetButtonId" onclick="pinReset();" status="pinResetStatus" value="{!$Label.LAB_SF_ASSET_PIN_PinResetButton}"/>  
                                            </apex:outputPanel>
                                        </apex:facet>            
                                    </apex:actionStatus>
                                    <apex:actionStatus id="blockCardStatus">
                                        <apex:facet name="start">
                                            <apex:image value="{!URLFOR($Resource.SLDS272, 'images/spinners/slds_spinner_brand.gif')}" height="25" width="25"/>
                                        </apex:facet>
                                        <apex:facet name="stop">
                                            <apex:outputPanel >
                                                <apex:commandButton id="blockCardButtonId" styleClass="slds-button slds-button_neutral" reRender="blockCardButtonId" onclick="getBlockCard();" status="blockCardStatus" value="{!$Label.LAB_SF_ASSET_BlockCardButton}"/>  
                                            </apex:outputPanel>
                                        </apex:facet>            
                                    </apex:actionStatus>
                                    <apex:actionStatus id="unBlockCardStatus">
                                        <apex:facet name="start">
                                            <apex:image value="{!URLFOR($Resource.SLDS272, 'images/spinners/slds_spinner_brand.gif')}" height="25" width="25"/>
                                        </apex:facet>
                                        <apex:facet name="stop">
                                            <apex:outputPanel >
                                                <apex:commandButton id="unblockButtonId" styleClass="slds-button slds-button_neutral" reRender="unblockButtonId" onclick="unBlockCard();" status="unBlockCardStatus" value="{!$Label.LAB_SF_ASSET_UnblockCardButton}"/>  
                                            </apex:outputPanel>
                                        </apex:facet>            
                                    </apex:actionStatus>
                                    <apex:actionStatus id="getCardStatus" >
                                        <apex:facet name="start">
                                            <apex:image value="{!URLFOR($Resource.SLDS272, 'images/spinners/slds_spinner_brand.gif')}" height="25" width="25"/>
                                        </apex:facet>
                                        <apex:facet name="stop">
                                            <apex:outputPanel >
                                                <apex:commandButton id="getCardButtonId" styleClass="slds-button slds-button_neutral" reRender="msgErrorId,balanceInformationsPanelId" action="{!getCard}" oncomplete="checkActionsButtons('{!Asset.Status}')" status="getCardStatus" value="{!$Label.LAB_SF_ASSET_GetCardButton}" />  
                                            </apex:outputPanel>
                                        </apex:facet>            
                                    </apex:actionStatus>
                            </div>
                        </div>
                    </div>
                    <apex:outputPanel id="balanceInformationsPanelId">
                        <div class="slds-form-element__row">
                            <div class="slds-form-element slds-size_1-of-3 slds-form-element_readonly">
                                <label class="slds-form-element__label">{!$Label.LAB_SF_ASSET_Balance}</label>
                                <div class="slds-form-element__control">
                                    <apex:outputText id="balanceId" styleClass="slds-form-element__static" value="{!balanceInst.balance}"/>
                                </div>
                            </div>
                            <div class="slds-form-element slds-size_1-of-3 slds-form-element_readonly">
                                <label class="slds-form-element__label">{!$Label.LAB_SF_ASSET_PendingDebit}</label>
                                <div class="slds-form-element__control">
                                    <apex:outputText id="pendingDebitId" styleClass="slds-form-element__static" value="{!balanceInst.pendingDebit}"/>
                                </div>
                            </div>
                            <div class="slds-form-element slds-size_1-of-3 slds-form-element_readonly">
                                <label class="slds-form-element__label">{!$Label.LAB_SF_ASSET_BalanceAvailable}</label>
                                <div class="slds-form-element__control">
                                    <apex:outputText id="balanceAvailableId" styleClass="slds-form-element__static" value="{!balanceInst.balanceAvailable}"/>
                                </div>
                            </div>
                            
                        </div> 
                        <div class="slds-form-element__row">
                            <div class="slds-form-element slds-size_1-of-3 slds-form-element_readonly">
                                <label class="slds-form-element__label">{!$Label.LAB_SF_ASSET_Status}</label>
                                <div class="slds-form-element__control slds-form-element__static">
                                    <apex:outputField id="statusId" styleClass="slds-input" value="{!currentAsset.Status}"/>
                                </div>
                            </div>
                            <div class="slds-form-element slds-size_1-of-3 slds-form-element_readonly">
                                <label class="slds-form-element__label">{!$ObjectType.Asset.Fields.ER_Asset_Status_Last_Modified_Date__c.Label}</label>
                                <div class="slds-form-element__control slds-form-element__static">
                                    <apex:outputField id="statusLastModifiedDateId" value="{!currentAsset.ER_Asset_Status_Last_Modified_Date__c}"/>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>
                </div>
            </div>
        </apex:outputPanel>
    
        <h3 class="slds-section__title  test-id__section-header-container" style="padding-top: 8px;">
            <Div class="slds-section__title-action">
                <span class="test-id__section-header-title slds-truncate">{!$Label.LAB_SF_ASSET_TransactionSection}</span>
            </Div>
        </h3>
        <div class="transactionOptions">
            <div class="slds-form-element slds-form_compound">
                <div class="slds-form-element__control">
                    <div class="slds-form-element__group">
                        <div class="slds-form-element__row">
                            <div class="slds-form-element slds-size_1-of-3">
                                <div class="slds-form-element__control">
                                    <input id="hiddenElement" type="hidden" />
                                    <apex:inputText id="datefilter" styleClass="slds-input slds-form-element__static" html-autocomplete="off" value="{!daterFilters}"/>
                                </div>
                            </div>
                            <div class="slds-form-element slds-size_1-of-3">
                                <apex:actionStatus id="getTransactionsStatus">
                                    <apex:facet name="start">
                                        <apex:image value="{!URLFOR($Resource.SLDS272, 'images/spinners/slds_spinner_brand.gif')}" height="25" width="25"/>
                                    </apex:facet>
                                    <apex:facet name="stop">
                                        <apex:outputPanel >
                                            <apex:commandButton id="getTransactionsButtonId" styleClass="slds-button slds-button_neutral" reRender="repeatId,msgErrorId,getMoreButtonId" status="getTransactionsStatus" action="{!getTransactionList}" value="{!$Label.LAB_SF_ASSET_GetTransactions}" oncomplete="RefreshTable();disableTransactionButton();" />  
                                        </apex:outputPanel>
                                    </apex:facet>            
                                </apex:actionStatus>
                                <apex:actionStatus id="getMoreStatus">
                                    <apex:facet name="start">
                                        <apex:image value="{!URLFOR($Resource.SLDS272, 'images/spinners/slds_spinner_brand.gif')}" height="25" width="25"/>
                                    </apex:facet>
                                    <apex:facet name="stop">
                                        <apex:outputPanel >
                                            <apex:commandButton id="getMoreButtonId" styleClass="slds-button slds-button_neutral" reRender="repeatId,msgErrorId,getMoreButtonId" status="getMoreStatus" action="{!geMoretTransactionList}" value="{!$Label.LAB_SF_ASSET_GetMore}" oncomplete="RefreshTable();" disabled="{!checkMoreButton}"/>   
                                        </apex:outputPanel>
                                    </apex:facet>            
                                </apex:actionStatus>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <apex:outputPanel id="repeatId">    
            <table id="transactionsTable" class="display" style="width:100%">
                <thead>
                    <tr>
                        <th>{!$Label.LAB_SF_ASSET_transactionDate}</th>
                        <th>{!$Label.LAB_SF_ASSET_transactionType}</th>
                        <th>{!$Label.LAB_SF_ASSET_transactionStatus}</th>
                        <th>{!$Label.LAB_SF_ASSET_transactionStatusDetail}</th>
                        <th>{!$Label.LAB_SF_ASSET_transactionAcceptorName}</th>
                        <th>{!$Label.LAB_SF_ASSET_transactionAmount}</th>
                    </tr>
                </thead>
                <tbody>
                    <apex:repeat value="{!transactionlist}" var="transaction">
                        <tr>
                            <td>{!transaction.trDate}</td>
                            <td>{!transaction.type}</td>
                            <td>{!transaction.status}</td>
                            <td>{!transaction.status_details}</td>
                            <td>{!transaction.acceptorName}</td>
                            <td>{!transaction.amount}</td>
                        </tr>
                    </apex:repeat>
                </tbody>
            </table>
        </apex:outputPanel>
    </apex:form>
    <script type="text/javascript">
    var transactionTable;
    var length={!$Label.LAB_SF_datatable_Length};
    $.fn.dataTable.moment( 'YYYY-MM-DD HH:mm:ss' );
    window.onload = setFocus
    function setFocus() {
        document.getElementById('hiddenElement').focus();
    }
    $(document).ready(function() {
        
        checkWSbuttons();
        checkActionsButtons('{!Asset.Status}');
        callGetCardWS('{!Asset.Status}');
        callGetBalanceWS('{!Asset.Status}');
        controlSolutionField();
        displaytable();

        var minDate = moment().subtract(6, 'months');
        var maxDate = moment();

        $('input[id$="datefilter"]').daterangepicker({
              autoApply: false,
              minDate: minDate,
              maxDate: maxDate,
              autoUpdateInput: true,
              locale: {
                  cancelLabel: "{!$Label.LABS_SF_Asset_Transaction_Clear}",
                  format: 'YYYY-MM-DD',
                  separator: ' - '
              }
          });

          $('input[id$="datefilter"]').on('apply.daterangepicker', function(ev, picker) {
              $(this).val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
          });

          $('input[id$="datefilter"]').on('cancel.daterangepicker', function(ev, picker) {
              $(this).val('');
          });

          $('input[id$="datefilter"]').val('');
          $("[id$='datefilter']").on( "change", function(){

             enableElement('getTransactionsButtonId');
             disableElement('getMoreButtonId');
          } );

          $('input[id$="datefilter"]').on('cancel.daterangepicker', function(ev, picker) {
              //do something, like clearing an input
              enableElement('getTransactionsButtonId');
              disableElement('getMoreButtonId');
            });

    });

    function displaytable(){
        
        transactionTable = $('#transactionsTable').DataTable({
            "initComplete": function () {
                
                if(this.api().data().count()>0){
                    $('#transactionsTable thead tr').clone(false).appendTo( '#transactionsTable thead' );
                    $('#transactionsTable thead tr:eq(1) th').each( function (i) {
                        $(this).html( '' );
                        $(this).removeClass("sorting sorting_desc sorting_asc");
                    });

                    this.api().columns([1, 2]).every( function (index) {

                        var column = this;
                        var select = $('<select onclick="return false;"><option value=""> </option></select>')
                            .appendTo( $('#transactionsTable thead tr:eq(1) th:eq('+index+')') )
                            .on( 'change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );
                            
                                column
                                    .search( val ? '^'+val+'$' : '', true, false )
                                    .draw();
                            });
         
                        column.data().unique().sort().each( function ( d, j ) {
                            select.append( '<option value="'+d+'">'+d+'</option>' )
                        });
                    });
                }
            },
            "rowCallback": function( row, data, index ) {
                switch(data[2]){
                    case "{!$Label.LAB_SF_ASSET_transactionFailed}": $(row).css('color', 'Red');
                        break;  
                }                                             
            },
            "pagingType": "full_numbers",
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "{!$Label.LAB_SF_datatable_All}"]],
            "pageLength": -1,
            //"searching": false,
            //"ordering": false,
            "order": [[ 0, "desc" ]],
            "language": {
                "lengthMenu":"Show _MENU_ transactions",
                "info":"{!$Label.LAB_SF_datatable_info}",
                "infoEmpty":"{!$Label.LAB_SF_datatable_infoEmpty}",
                "infoFiltered": "{!$Label.LAB_SF_datatable_infoFiltered}",
                "Search": "{!$Label.LAB_SF_datatable_Search}",
                "zeroRecords":    "{!$Label.LAB_SF_datatable_zeroRecords}",
                "paginate": {
                    "first":      "{!$Label.LAB_SF_datatable_First}",
                    "last":       "{!$Label.LAB_SF_datatable_Last}",
                    "next":       "{!$Label.LAB_SF_datatable_Next}",
                    "previous":   "{!$Label.LAB_SF_datatable_Previous}"
                }
            }
        });
    }
    
    function RefreshTable(){
        
        displaytable();
    }

    function disableTransactionButton(){
        
        disableElement('getTransactionsButtonId');
    }

    function callGetCardWS(data){
        if('{!Asset.recordtype.Developername}' == 'ER_Anonymous_Card' && data == ''){
            $("[id$='getCardButtonId']").trigger("click");
        }
    }

    function callGetBalanceWS(data){
        
        var statusActive = '{!$Label.LAB_SF_ASSET_Status_Active}';
        if(data == '' || data.toUpperCase() == statusActive.toUpperCase()){
            $("[id$='getBalanceButtonId']").trigger("click");
        }
    }

    function controlSolutionField(){
        if('{!Asset.ER_Asset_Type__c}'=='{!$Label.LAB_SF_ASSET_Type}'){
            disableElement('solutionId');
        }
    }

    function checkActionsButtons(data){
        if(data){
            var statusActive = '{!$Label.LAB_SF_ASSET_Status_Active}';
            if(data == '' || data.toUpperCase() == statusActive.toUpperCase()){
                enableElement('pinResetButtonId');
                enableElement('blockCardButtonId');
                enableElement('getBalanceButtonId');
                disableElement('unblockButtonId');
            }
            else{
                var statusBlocked = '{!$Label.LAB_SF_ASSET_Blocked}';
                disableElement('unblockButtonId');
                if(data.toUpperCase() == statusBlocked.toUpperCase())
                {
                enableElement('unblockButtonId');
                }
                disableElement('pinResetButtonId');
                disableElement('blockCardButtonId');
                disableElement('getBalanceButtonId');
            }
        }
    }

    function checkWSbuttons(data){
        
        disableElement('unblockButtonId');
        if(data){
            if(data.value == ''){
                disableElement('getBalanceButtonId');
                disableElement('getTransactionsButtonId');
                disableElement('pinResetButtonId');
                disableElement('blockCardButtonId');
                disableElement('getCardButtonId');
            }
            else{
                enableElement('getBalanceButtonId');
                enableElement('getTransactionsButtonId');
                enableElement('pinResetButtonId');
                enableElement('blockCardButtonId');
                enableElement('getCardButtonId');
            }
        }
        else{
            var edenredSolution = "{!Asset.ER_Edenred_Solution__c}";
            if(!edenredSolution){
                disableElement('getBalanceButtonId');
                disableElement('getTransactionsButtonId');
                disableElement('pinResetButtonId');
                disableElement('blockCardButtonId');
                disableElement('getCardButtonId');
            }
        }
    }

    function enableElement(id){
        $("[id$='"+id+"']").removeAttr('disabled');
    }

    function disableElement(id){
        $("[id$='"+id+"']").attr('disabled','disabled');
    }
    
    function getBlockCard(){
        if (inLightning()) {
            Sfdc.canvas.publisher.publish({name:"publisher.invokeAction", payload:{actionName:"Asset.ER_Block_Card"}});
        }
        else{
            window.parent.location.href=('/apex/VFER03_Asset_BlockCard?Id={!Asset.id}');
        }
    }

    function unBlockCard(){
        if (inLightning()) {
            Sfdc.canvas.publisher.publish({name:"publisher.invokeAction", payload:{actionName:"Asset.ER_Unblock_Card"}});
        }
        else{
            window.parent.location.href=('/apex/VFER06_Asset_UnblockCard?Id={!Asset.id}');
        }
    }

    function pinReset(){
        if (inLightning()) {
            Sfdc.canvas.publisher.publish({name:"publisher.invokeAction", payload:{actionName:"Asset.ER_Pin_Reset"}});
        }
        else{
            window.parent.location.href=('/apex/VFER02_Asset_PinReset?Id={!Asset.id}');
        }
    }

    function inLightning() {

        return sforce.one != undefined;
    }
    
    </script>
</apex:page>