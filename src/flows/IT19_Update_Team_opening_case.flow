<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <name>isRed</name>
        <label>isRed</label>
        <locationX>1174</locationX>
        <locationY>362</locationY>
        <assignmentItems>
            <assignToReference>getCaseInformation.IT_Team_Opening_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>RED</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Aggiorna_team_opening_case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>isRedClosed</name>
        <label>isRedClosed</label>
        <locationX>1165</locationX>
        <locationY>838</locationY>
        <assignmentItems>
            <assignToReference>getCaseInformation.IT_Team_Closing_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>RED</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_closing_team_case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>isWhite</name>
        <label>isWhite</label>
        <locationX>1186</locationX>
        <locationY>490</locationY>
        <assignmentItems>
            <assignToReference>getCaseInformation.IT_Team_Opening_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>WHITE</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Aggiorna_team_opening_case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>quueueContainsWhite</name>
        <label>quueueContainsWhite</label>
        <locationX>1169</locationX>
        <locationY>950</locationY>
        <assignmentItems>
            <assignToReference>getCaseInformation.IT_Team_Closing_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>WHITE</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_closing_team_case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>userOwnerIsRed</name>
        <label>userOwnerIsRed</label>
        <locationX>1335</locationX>
        <locationY>78</locationY>
        <assignmentItems>
            <assignToReference>getCaseInformation.IT_Team_Opening_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>RED</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateUserOwnerOpeningCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>userOwnerIsRedClosed</name>
        <label>userOwnerIsRedClosed</label>
        <locationX>1336</locationX>
        <locationY>606</locationY>
        <assignmentItems>
            <assignToReference>getCaseInformation.IT_Team_Closing_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>RED</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateUserClosingCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>userOwnerTeamIsWhite</name>
        <label>userOwnerTeamIsWhite</label>
        <locationX>1336</locationX>
        <locationY>214</locationY>
        <assignmentItems>
            <assignToReference>getCaseInformation.IT_Team_Opening_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>WHITE</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateUserOwnerOpeningCase</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>userOwnerTeamIsWhiteClosed</name>
        <label>userOwnerTeamIsWhiteClosed</label>
        <locationX>1337</locationX>
        <locationY>745</locationY>
        <assignmentItems>
            <assignToReference>getCaseInformation.IT_Team_Closing_Case__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>WHITE</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateUserClosingCase</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>assingQueueTeam</name>
        <label>assingQueueTeam</label>
        <locationX>1074</locationX>
        <locationY>125</locationY>
        <defaultConnectorLabel>Esito predefinito</defaultConnectorLabel>
        <rules>
            <name>OwnerUserIsRed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>foundQueue.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>RED</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>userOwnerIsRed</targetReference>
            </connector>
            <label>OwnerUserIsRed</label>
        </rules>
        <rules>
            <name>OwnerUserIsWhite</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>foundQueue.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>WHITE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>userOwnerTeamIsWhite</targetReference>
            </connector>
            <label>OwnerUserIsWhite</label>
        </rules>
    </decisions>
    <decisions>
        <name>assingQueueTeamClosed</name>
        <label>assingQueueTeamClosed</label>
        <locationX>1125</locationX>
        <locationY>686</locationY>
        <defaultConnectorLabel>Esito predefinito</defaultConnectorLabel>
        <rules>
            <name>QueueOwnerUserIsRed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>foundQueue.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>RED</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>userOwnerIsRedClosed</targetReference>
            </connector>
            <label>QueueOwnerUserIsRed</label>
        </rules>
        <rules>
            <name>QueueOwnerUserIsWhite</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>foundQueue.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>WHITE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>userOwnerTeamIsWhiteClosed</targetReference>
            </connector>
            <label>QueueOwnerUserIsWhite</label>
        </rules>
    </decisions>
    <decisions>
        <description>Verifica se l&apos;owner del caso è un User o un titolare</description>
        <name>Check_Case_Owner_Type_Closed</name>
        <label>Check Case Owner Type [Closed]</label>
        <locationX>366</locationX>
        <locationY>713</locationY>
        <defaultConnectorLabel>Esito predefinito</defaultConnectorLabel>
        <rules>
            <name>isUserClosed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCaseInformation.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>findGroupClosed</targetReference>
            </connector>
            <label>isUserClosed</label>
        </rules>
        <rules>
            <name>isQueue2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCaseInformation.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueueNameClosed</targetReference>
            </connector>
            <label>isQueue</label>
        </rules>
    </decisions>
    <decisions>
        <description>Verifica se l&apos;owner del caso è un User o un titolare</description>
        <name>Check_CaseOwner_Type</name>
        <label>Check CaseOwner Type</label>
        <locationX>368</locationX>
        <locationY>250</locationY>
        <defaultConnectorLabel>Esito Predefinito</defaultConnectorLabel>
        <rules>
            <name>isUser</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCaseInformation.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>findGroup</targetReference>
            </connector>
            <label>isUser</label>
        </rules>
        <rules>
            <name>isQueue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCaseInformation.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueueName</targetReference>
            </connector>
            <label>isQueue</label>
        </rules>
    </decisions>
    <decisions>
        <description>Verifica se lo stato del caso è Chiuso o aperto</description>
        <name>checkCaseStatus</name>
        <label>checkCaseStatus</label>
        <locationX>32</locationX>
        <locationY>591</locationY>
        <defaultConnectorLabel>Predefinito</defaultConnectorLabel>
        <rules>
            <name>isNew</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCaseInformation.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_CaseOwner_Type</targetReference>
            </connector>
            <label>isNew</label>
        </rules>
        <rules>
            <name>isClosed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getCaseInformation.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Case_Owner_Type_Closed</targetReference>
            </connector>
            <label>isClosed</label>
        </rules>
    </decisions>
    <decisions>
        <name>codeType</name>
        <label>codeTypeTeam</label>
        <locationX>816</locationX>
        <locationY>436</locationY>
        <defaultConnectorLabel>Predefinito</defaultConnectorLabel>
        <rules>
            <name>Red</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getQueueNameVar.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>RED</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>isRed</targetReference>
            </connector>
            <label>QueueTeamIsRed</label>
        </rules>
        <rules>
            <name>White</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getQueueNameVar.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>WHITE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>isWhite</targetReference>
            </connector>
            <label>QueueTeamIsWhite</label>
        </rules>
    </decisions>
    <decisions>
        <description>Verifica se il titolare appartiene ad un gruppo</description>
        <name>MemberIsInQueue</name>
        <label>MemberisInQueue</label>
        <locationX>690</locationX>
        <locationY>64</locationY>
        <defaultConnectorLabel>Esito predefinito</defaultConnectorLabel>
        <rules>
            <name>InQueue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IdGruppo</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IdGruppo</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>getQueue</targetReference>
            </connector>
            <label>InQueue</label>
        </rules>
    </decisions>
    <decisions>
        <name>MemberIsInQueueClosed</name>
        <label>MemberIsInQueueClosed</label>
        <locationX>800</locationX>
        <locationY>638</locationY>
        <defaultConnectorLabel>Esito predefinito</defaultConnectorLabel>
        <rules>
            <name>MemberIsInQueueClosed2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IdGruppo</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IdGruppo</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>getQueueClosed</targetReference>
            </connector>
            <label>MemberIsInQueueClosed2</label>
        </rules>
    </decisions>
    <decisions>
        <name>queueTeamTypeClosed</name>
        <label>queueTeamTypeClosed</label>
        <locationX>873</locationX>
        <locationY>868</locationY>
        <defaultConnectorLabel>Esito predefinito</defaultConnectorLabel>
        <rules>
            <name>queueContainsRED</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getQueueNameVar.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>RED</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>isRedClosed</targetReference>
            </connector>
            <label>queueContainsRED</label>
        </rules>
        <rules>
            <name>queueContainsWHITE</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getQueueNameVar.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>WHITE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>quueueContainsWhite</targetReference>
            </connector>
            <label>queueContainsWHITE</label>
        </rules>
    </decisions>
    <description>Versione con le variabili</description>
    <interviewLabel>IT_ {!$Flow.CurrentDateTime}</interviewLabel>
    <label>IT19_Update_Team_Opening_Closing_Case</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Verifica se esiste un membro di un gruppo con id =titolare del caso</description>
        <name>findGroup</name>
        <label>findGroup</label>
        <locationX>535</locationX>
        <locationY>62</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>MemberIsInQueue</targetReference>
        </connector>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCaseInformation.OwnerId</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
        <outputAssignments>
            <assignToReference>IdGruppo</assignToReference>
            <field>GroupId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>findGroupClosed</name>
        <label>findGroupClosed</label>
        <locationX>658</locationX>
        <locationY>637</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>MemberIsInQueueClosed</targetReference>
        </connector>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCaseInformation.OwnerId</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
        <outputAssignments>
            <assignToReference>IdGruppo</assignToReference>
            <field>GroupId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Case_Id</name>
        <label>Get Case Id</label>
        <locationX>44</locationX>
        <locationY>280</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>checkCaseStatus</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <object>Case</object>
        <outputReference>getCaseInformation</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>OwnerId</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>IT_Team_Closing_Case__c</queriedFields>
        <queriedFields>IT_Team_Opening_Case__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Prende informazione dal nome del gruppo</description>
        <name>getQueue</name>
        <label>getQueue</label>
        <locationX>903</locationX>
        <locationY>63</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assingQueueTeam</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IdGruppo</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>foundQueue</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>getQueueClosed</name>
        <label>getQueueClosed</label>
        <locationX>970</locationX>
        <locationY>642</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assingQueueTeamClosed</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IdGruppo</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>foundQueue</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>getQueueName</name>
        <label>getQueueName</label>
        <locationX>534</locationX>
        <locationY>434</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>codeType</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCaseInformation.OwnerId</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>getQueueNameVar</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>getQueueNameClosed</name>
        <label>getQueueNameClosed</label>
        <locationX>654</locationX>
        <locationY>856</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>queueTeamTypeClosed</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getCaseInformation.OwnerId</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>getQueueNameVar</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>Aggiorna_team_opening_case</name>
        <label>Aggiorna team opening case</label>
        <locationX>1438</locationX>
        <locationY>415</locationY>
        <inputReference>getCaseInformation</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_closing_team_case</name>
        <label>Update closing team case</label>
        <locationX>1428</locationX>
        <locationY>905</locationY>
        <inputReference>getCaseInformation</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateUserClosingCase</name>
        <label>UpdateUserClosingCase</label>
        <locationX>1467</locationX>
        <locationY>669</locationY>
        <inputReference>getCaseInformation</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateUserOwnerOpeningCase</name>
        <label>UpdateUserOwnerOpeningCase</label>
        <locationX>1483</locationX>
        <locationY>142</locationY>
        <inputReference>getCaseInformation</inputReference>
    </recordUpdates>
    <start>
        <locationX>45</locationX>
        <locationY>74</locationY>
        <connector>
            <targetReference>Get_Case_Id</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>foundQueue</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Group</objectType>
    </variables>
    <variables>
        <description>Contiene le informazioni del case iniziale</description>
        <name>getCaseInformation</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>getQueueClosedVar</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Group</objectType>
    </variables>
    <variables>
        <name>getQueueNameVar</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Group</objectType>
    </variables>
    <variables>
        <name>IdGruppo</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>se owner del caso è uno user, verifica se nel suo profilo contiene &quot;front&quot;</description>
        <name>OwnerIdUser</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ownerIdUserProfile</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>OwnerIdUser</elementReference>
        </value>
    </variables>
    <variables>
        <name>QueueTeam</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TeamOpeningcase</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>userOwnerTeamQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
